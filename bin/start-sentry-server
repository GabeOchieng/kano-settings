#!/usr/bin/env python

# start-sentry-server
#
# Copyright (C) 2014-2019 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU GPLv2
#
# Start the server on the first boot.


import sys
import os

from kano_settings.common import settings_dir
from kano_settings.system.advanced import sentry_config, \
    parse_whitelist_to_config_file, launch_sentry_server
from kano.logging import logger


def main():
    # Look at the setting to find the parental level
    use_sentry = False

    settings_config = os.path.join(settings_dir, 'settings')
    if not os.path.exists(settings_config):
        logger.debug("Settings config file {} does not exist, not turning on parental control".format(settings_config))
        sys.exit(1)

    f = open(settings_config, 'r')

    # Check if the parental control is at a level in which sentry is used
    for line in f:
        line = line.strip()
        whitelist = '"use_sentry": "whitelist"' in line
        safesearch = '"use_sentry": "safesearch"' in line
        if whitelist or safesearch:
            use_sentry = True
            logger.debug("Sentry use set in line {}".format(line))
        else:
            logger.debug("Sentry use is NOT set in line {}".format(line))

    # If the parental is at the highest level, start the sentry server
    if use_sentry:
        # Functions contain logs
        if whitelist:
            parse_whitelist_to_config_file(sentry_config)
        else:
            # No need to rebuild safesearch config, as it doesn't change
            pass

        launch_sentry_server(sentry_config)
        return

    # If you don't switch on the parental lock, return 1
    return 1


if __name__ == "__main__":
    sys.exit(main() or 0)
